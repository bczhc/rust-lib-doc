(function() {var type_impls = {
"cow_dedupe":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hasher\" class=\"impl\"><a href=\"#impl-Hasher\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Hasher</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>() -&gt; Hasher <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Hasher\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Construct a new <code>Hasher</code> for the regular hash function.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_keyed\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_keyed</a>(key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">32</a>]) -&gt; Hasher <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Hasher\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Construct a new <code>Hasher</code> for the keyed hash function. See\n<a href=\"fn.keyed_hash.html\"><code>keyed_hash</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_derive_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_derive_key</a>(context: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; Hasher <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Hasher\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Construct a new <code>Hasher</code> for the key derivation function. See\n<a href=\"fn.derive_key.html\"><code>derive_key</code></a>. The context string should be hardcoded, globally\nunique, and application-specific.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reset\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reset</a>(&amp;mut self) -&gt; &amp;mut Hasher <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut Hasher\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Reset the <code>Hasher</code> to its initial state.</p>\n<p>This is functionally the same as overwriting the <code>Hasher</code> with a new\none, using the same key or context string if any.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">update</a>(&amp;mut self, input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; &amp;mut Hasher <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut Hasher\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Add input bytes to the hash state. You can call this any number of times.</p>\n<p>This method is always single-threaded. For multithreading support, see\n<a href=\"#method.update_rayon\"><code>update_rayon</code></a> (enabled with the <code>rayon</code> Cargo feature).</p>\n<p>Note that the degree of SIMD parallelism that <code>update</code> can use is limited by the size of\nthis input buffer. See <a href=\"#method.update_reader\"><code>update_reader</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finalize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">finalize</a>(&amp;self) -&gt; Hash</h4></section></summary><div class=\"docblock\"><p>Finalize the hash state and return the <a href=\"struct.Hash.html\"><code>Hash</code></a> of\nthe input.</p>\n<p>This method is idempotent. Calling it twice will give the same result.\nYou can also add more input and finalize again.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finalize_xof\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">finalize_xof</a>(&amp;self) -&gt; OutputReader</h4></section></summary><div class=\"docblock\"><p>Finalize the hash state and return an <a href=\"struct.OutputReader.html\"><code>OutputReader</code></a>, which can\nsupply any number of output bytes.</p>\n<p>This method is idempotent. Calling it twice will give the same result.\nYou can also add more input and finalize again.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Return the total number of bytes hashed so far.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_reader\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">update_reader</a>(&amp;mut self, reader: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Hasher, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>As <a href=\"Hasher::update\"><code>update</code></a>, but reading from a\n<a href=\"https://doc.rust-lang.org/std/io/trait.Read.html\"><code>std::io::Read</code></a> implementation.</p>\n<p>[<code>Hasher</code>] implements\n<a href=\"https://doc.rust-lang.org/std/io/trait.Write.html\"><code>std::io::Write</code></a>, so it’s possible to\nuse <a href=\"https://doc.rust-lang.org/std/io/fn.copy.html\"><code>std::io::copy</code></a> to update a [<code>Hasher</code>]\nfrom any reader. Unfortunately, this standard approach can limit performance, because\n<code>copy</code> currently uses an internal 8 KiB buffer that isn’t big enough to take advantage of\nall SIMD instruction sets. (In particular, <a href=\"https://en.wikipedia.org/wiki/AVX-512\">AVX-512</a>\nneeds a 16 KiB buffer.) <code>update_reader</code> avoids this performance problem and is slightly\nmore convenient.</p>\n<p>The internal buffer size this method uses may change at any time, and it may be different\nfor different targets. The only guarantee is that it will be large enough for all of this\ncrate’s SIMD implementations on the current platform.</p>\n<p>The most common implementer of\n<a href=\"https://doc.rust-lang.org/std/io/trait.Read.html\"><code>std::io::Read</code></a> might be\n<a href=\"https://doc.rust-lang.org/std/fs/struct.File.html\"><code>std::fs::File</code></a>, but note that memory\nmapping can be faster than this method for hashing large files. See\n<a href=\"Hasher::update_mmap\"><code>update_mmap</code></a> and <a href=\"Hasher::update_mmap_rayon\"><code>update_mmap_rayon</code></a>,\nwhich require the <code>mmap</code> and (for the latter) <code>rayon</code> Cargo features.</p>\n<p>This method requires the <code>std</code> Cargo feature, which is enabled by default.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"comment\">// Hash standard input.\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>hasher = blake3::Hasher::new();\nhasher.update_reader(std::io::stdin().lock())<span class=\"question-mark\">?</span>;\n<span class=\"macro\">println!</span>(<span class=\"string\">\"{}\"</span>, hasher.finalize());</code></pre></div>\n</div></details></div></details>",0,"cow_dedupe::hash::B3_256"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Write-for-Hasher\" class=\"impl\"><a href=\"#impl-Write-for-Hasher\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a> for Hasher</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>This is equivalent to <a href=\"#method.update\"><code>update</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a href=\"#method.flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Flush this output stream, ensuring that all intermediately buffered\ncontents reach their destination. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#tymethod.flush\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_vectored\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.36.0\">1.36.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#1591\">source</a></span><a href=\"#method.write_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.write_vectored\" class=\"fn\">write_vectored</a>(&amp;mut self, bufs: &amp;[<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'_&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Like <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#tymethod.write\" title=\"method std::io::Write::write\"><code>write</code></a>, except that it writes from a slice of buffers. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.write_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_write_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#1606\">source</a><a href=\"#method.is_write_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.is_write_vectored\" class=\"fn\">is_write_vectored</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>can_vector</code>)</span></div></span><div class='docblock'>Determines if this <code>Write</code>r has an efficient <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.write_vectored\" title=\"method std::io::Write::write_vectored\"><code>write_vectored</code></a>\nimplementation. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.is_write_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_all\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#1668\">source</a></span><a href=\"#method.write_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.write_all\" class=\"fn\">write_all</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Attempts to write an entire buffer into this writer. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.write_all\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_all_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#1733\">source</a><a href=\"#method.write_all_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.write_all_vectored\" class=\"fn\">write_all_vectored</a>(&amp;mut self, bufs: &amp;mut [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'_&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>write_all_vectored</code>)</span></div></span><div class='docblock'>Attempts to write multiple buffers into this writer. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.write_all_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_fmt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#1789\">source</a></span><a href=\"#method.write_fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.write_fmt\" class=\"fn\">write_fmt</a>(&amp;mut self, fmt: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Arguments.html\" title=\"struct core::fmt::Arguments\">Arguments</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Writes a formatted string into this writer, returning any error\nencountered. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.write_fmt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/std/io/mod.rs.html#1845-1847\">source</a></span><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates a “by reference” adapter for this instance of <code>Write</code>. <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html#method.by_ref\">Read more</a></div></details></div></details>","Write","cow_dedupe::hash::B3_256"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExtendableOutputReset-for-Hasher\" class=\"impl\"><a href=\"#impl-ExtendableOutputReset-for-Hasher\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ExtendableOutputReset for Hasher</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.finalize_xof_reset\" class=\"method trait-impl\"><a href=\"#method.finalize_xof_reset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">finalize_xof_reset</a>(&amp;mut self) -&gt; &lt;Hasher as ExtendableOutput&gt;::Reader <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;Hasher as ExtendableOutput&gt;::Reader\">ⓘ</a></h4></section></summary><div class='docblock'>Retrieve XOF reader and reset hasher instance state.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finalize_xof_reset_into\" class=\"method trait-impl\"><a href=\"#method.finalize_xof_reset_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">finalize_xof_reset_into</a>(&amp;mut self, out: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Finalize XOF, write result into <code>out</code>, and reset the hasher state.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finalize_boxed_reset\" class=\"method trait-impl\"><a href=\"#method.finalize_boxed_reset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">finalize_boxed_reset</a>(&amp;mut self, output_size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;</h4></section></summary><div class='docblock'>Retrieve result into a boxed slice of the specified size and reset\nthe hasher state. <a>Read more</a></div></details></div></details>","ExtendableOutputReset","cow_dedupe::hash::B3_256"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Update-for-Hasher\" class=\"impl\"><a href=\"#impl-Update-for-Hasher\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Update for Hasher</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.update\" class=\"method trait-impl\"><a href=\"#method.update\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">update</a>(&amp;mut self, data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Update state using the provided data.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">chain</a>(self, data: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Digest input data in a chained manner.</div></details></div></details>","Update","cow_dedupe::hash::B3_256"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExtendableOutput-for-Hasher\" class=\"impl\"><a href=\"#impl-ExtendableOutput-for-Hasher\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ExtendableOutput for Hasher</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Reader\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Reader\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Reader</a> = OutputReader</h4></section></summary><div class='docblock'>Reader</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finalize_xof\" class=\"method trait-impl\"><a href=\"#method.finalize_xof\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">finalize_xof</a>(self) -&gt; &lt;Hasher as ExtendableOutput&gt;::Reader <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&lt;Hasher as ExtendableOutput&gt;::Reader\">ⓘ</a></h4></section></summary><div class='docblock'>Retrieve XOF reader and consume hasher instance.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finalize_xof_into\" class=\"method trait-impl\"><a href=\"#method.finalize_xof_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">finalize_xof_into</a>(self, out: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Finalize XOF and write result into <code>out</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.digest_xof\" class=\"method trait-impl\"><a href=\"#method.digest_xof\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">digest_xof</a>(input: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;, output: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>])<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class='docblock'>Compute hash of <code>data</code> and write it into <code>output</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finalize_boxed\" class=\"method trait-impl\"><a href=\"#method.finalize_boxed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">finalize_boxed</a>(self, output_size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;</h4></section></summary><div class='docblock'>Retrieve result into a boxed slice of the specified size and consume\nthe hasher. <a>Read more</a></div></details></div></details>","ExtendableOutput","cow_dedupe::hash::B3_256"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Hasher\" class=\"impl\"><a href=\"#impl-Debug-for-Hasher\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Hasher</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","cow_dedupe::hash::B3_256"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BlockSizeUser-for-Hasher\" class=\"impl\"><a href=\"#impl-BlockSizeUser-for-Hasher\" class=\"anchor\">§</a><h3 class=\"code-header\">impl BlockSizeUser for Hasher</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.BlockSize\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.BlockSize\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">BlockSize</a> = <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;</h4></section></summary><div class='docblock'>Size of the block in bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.block_size\" class=\"method trait-impl\"><a href=\"#method.block_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">block_size</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return block size in bytes.</div></details></div></details>","BlockSizeUser","cow_dedupe::hash::B3_256"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedOutputReset-for-Hasher\" class=\"impl\"><a href=\"#impl-FixedOutputReset-for-Hasher\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FixedOutputReset for Hasher</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.finalize_into_reset\" class=\"method trait-impl\"><a href=\"#method.finalize_into_reset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">finalize_into_reset</a>(\n    &amp;mut self,\n    out: &amp;mut GenericArray&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &lt;Hasher as OutputSizeUser&gt;::OutputSize&gt;\n)</h4></section></summary><div class='docblock'>Write result into provided array and reset the hasher state.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finalize_fixed_reset\" class=\"method trait-impl\"><a href=\"#method.finalize_fixed_reset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">finalize_fixed_reset</a>(&amp;mut self) -&gt; GenericArray&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, Self::OutputSize&gt;</h4></section></summary><div class='docblock'>Retrieve result and reset the hasher state.</div></details></div></details>","FixedOutputReset","cow_dedupe::hash::B3_256"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-KeyInit-for-Hasher\" class=\"impl\"><a href=\"#impl-KeyInit-for-Hasher\" class=\"anchor\">§</a><h3 class=\"code-header\">impl KeyInit for Hasher</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method trait-impl\"><a href=\"#method.new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new</a>(key: &amp;GenericArray&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &lt;Hasher as KeySizeUser&gt;::KeySize&gt;) -&gt; Hasher <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Hasher\">ⓘ</a></h4></section></summary><div class='docblock'>Create new value from fixed size key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_from_slice\" class=\"method trait-impl\"><a href=\"#method.new_from_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_from_slice</a>(key: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, InvalidLength&gt;</h4></section></summary><div class='docblock'>Create new value from variable size key.</div></details></div></details>","KeyInit","cow_dedupe::hash::B3_256"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Hasher\" class=\"impl\"><a href=\"#impl-Default-for-Hasher\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for Hasher</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Hasher <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Hasher\">ⓘ</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","cow_dedupe::hash::B3_256"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-KeySizeUser-for-Hasher\" class=\"impl\"><a href=\"#impl-KeySizeUser-for-Hasher\" class=\"anchor\">§</a><h3 class=\"code-header\">impl KeySizeUser for Hasher</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.KeySize\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.KeySize\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">KeySize</a> = <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;</h4></section></summary><div class='docblock'>Key size in bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.key_size\" class=\"method trait-impl\"><a href=\"#method.key_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">key_size</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return key size in bytes.</div></details></div></details>","KeySizeUser","cow_dedupe::hash::B3_256"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputSizeUser-for-Hasher\" class=\"impl\"><a href=\"#impl-OutputSizeUser-for-Hasher\" class=\"anchor\">§</a><h3 class=\"code-header\">impl OutputSizeUser for Hasher</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.OutputSize\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.OutputSize\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">OutputSize</a> = <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/typenum/1.17.0/typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;</h4></section></summary><div class='docblock'>Size of the output in bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.output_size\" class=\"method trait-impl\"><a href=\"#method.output_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">output_size</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return output size in bytes.</div></details></div></details>","OutputSizeUser","cow_dedupe::hash::B3_256"],["<section id=\"impl-MacMarker-for-Hasher\" class=\"impl\"><a href=\"#impl-MacMarker-for-Hasher\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MacMarker for Hasher</h3></section>","MacMarker","cow_dedupe::hash::B3_256"],["<section id=\"impl-HashMarker-for-Hasher\" class=\"impl\"><a href=\"#impl-HashMarker-for-Hasher\" class=\"anchor\">§</a><h3 class=\"code-header\">impl HashMarker for Hasher</h3></section>","HashMarker","cow_dedupe::hash::B3_256"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedOutput-for-Hasher\" class=\"impl\"><a href=\"#impl-FixedOutput-for-Hasher\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FixedOutput for Hasher</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.finalize_into\" class=\"method trait-impl\"><a href=\"#method.finalize_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">finalize_into</a>(\n    self,\n    out: &amp;mut GenericArray&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, &lt;Hasher as OutputSizeUser&gt;::OutputSize&gt;\n)</h4></section></summary><div class='docblock'>Consume value and write result into provided array.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finalize_fixed\" class=\"method trait-impl\"><a href=\"#method.finalize_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">finalize_fixed</a>(self) -&gt; GenericArray&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, Self::OutputSize&gt;</h4></section></summary><div class='docblock'>Retrieve result and consume the hasher instance.</div></details></div></details>","FixedOutput","cow_dedupe::hash::B3_256"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reset-for-Hasher\" class=\"impl\"><a href=\"#impl-Reset-for-Hasher\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Reset for Hasher</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.reset\" class=\"method trait-impl\"><a href=\"#method.reset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">reset</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Reset state to its initial value.</div></details></div></details>","Reset","cow_dedupe::hash::B3_256"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Hasher\" class=\"impl\"><a href=\"#impl-Clone-for-Hasher\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Hasher</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Hasher <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Hasher\">ⓘ</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","cow_dedupe::hash::B3_256"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()